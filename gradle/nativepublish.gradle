def pomConfig = {
    licenses {
        license {
            name "The Apache Software License, Version 2.0"
            url "http://www.apache.org/licenses/LICENSE-2.0.txt"
            distribution "repo"
        }
    }
    developers {
        developer {
            id "Squage"
            name "Squage"
            organization "Squage"
            organizationUrl "https://square.com/"
        }
    }
    scm {
        url "https://github.com/square/sqldelight"
    }
}

/*
 * Copyright (c) 2018 Touchlab Inc
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

bintray {
    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : ''
    key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : ''

    pkg {
        def ourRepo = "kotlin"
        def ourOrg = "touchlabpublic"
        userOrg = ourOrg
        repo = ourRepo
        name = "${project.name}"
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/square/sqldelight'
    }
}

publishing {
    repositories {
        maven {
            url = project.property('j2objcMavenDeploy')
        }
    }
}

afterEvaluate {
    project.publishing.publications.forEach { publication ->
        publication.pom.withXml {
            def root = asNode()
            root.appendNode('name', project.name)
            root.appendNode('description', 'SqlDelight Native')
            root.appendNode('url', 'https://github.com/square/sqldelight')
            root.children().last() + pomConfig
        }
    }
}

bintrayUpload.doFirst {
    publications = project.publishing.publications
}
